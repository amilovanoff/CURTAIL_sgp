"0","res <- read_simulation_f(function_tbc = ""transport_lca_ghg_f"",sub_function_tbc = ""n"",dts_name=""transport_lca_ghg_tot"",scen_tbc = ""def"",sim_tbc = ""sim1"",sim_type = ""continuous"")"
"0",""
"0","#1) Associate the simulations to x, y and z in ternary graphs"
"0","#Only consider the simulations with target lower than score target"
"0","score_target <- do.call(fun_res_f,list(fun_name=""transport_lca_ghg_target_f""))[[""score_target""]]"
"0","reduction_dt <- subset(res,Year==2030 & Value>=score_target)"
"0","#Calculate the percent of reduction of each pathway"
"0","score_baseline <- max(reduction_dt$Value)"
"0","#Start by calculating the reductions for single pathways (from baseline, to one pathway)"
"0","pathway_cols <- grep(""variable"",colnames(reduction_dt),value=TRUE)"
"0","for (pathway in pathway_cols){"
"0","  for (case in setdiff(unique(reduction_dt[,pathway]),""0"")){"
"0","    row_case_baseline <- which(reduction_dt[,pathway]==case & rowSums(sapply(setdiff(pathway_cols,pathway),function(x)reduction_dt[,x]==""0""))==(length(pathway_cols)-1))"
"0","    #Calculate the reductions compared to baseline (>0)"
"0","    reduction_dt[row_case_baseline,paste0(pathway,""_red"")] <- (score_baseline-reduction_dt[row_case_baseline,""Value""])/(score_baseline-score_target)"
"0","  }"
"0","}"
"0","#Then, calculate the reductions for multiple pathways, considering modal_share the first pathway, fuel consumption improvements the second, and technology the third."
"0","pathway = ""modal_share_variable"""
"0","for (case in setdiff(unique(reduction_dt[,pathway]),""0"")){"
"0","  row_case_baseline <- which(reduction_dt[,pathway]==case & rowSums(sapply(setdiff(pathway_cols,pathway),function(x)reduction_dt[,x]==""0""))==(length(pathway_cols)-1))"
"0","  #Calculate the reductions of additional pathways compared to the case"
"0","  for (add_pathway in setdiff(pathway_cols,pathway)){"
"0","    for (add_case in unique(reduction_dt[reduction_dt[,pathway]==case,add_pathway])){"
"0","      #Obtain row number of the case"
"0","      row_case <- which(reduction_dt[,pathway]==case & reduction_dt[,add_pathway]==add_case & rowSums(sapply(setdiff(pathway_cols,c(pathway,add_pathway)),function(x)reduction_dt[,x]==""0""))==(length(pathway_cols)-2))"
"0","      #Calculate reductions for first pathway"
"0","      reduction_dt[row_case,paste0(pathway,""_red"")] <- (score_baseline-reduction_dt[row_case_baseline,""Value""])/(score_baseline-score_target)"
"0","      #Calculate reductions for the second pathway"
"0","      reduction_dt[row_case,paste0(add_pathway,""_red"")] <- (reduction_dt[row_case_baseline,""Value""]-reduction_dt[row_case,""Value""])/(score_baseline-score_target)"
"0","    }"
"0","  }"
"0","}"
"0","#Calculate the reductions for multiple pathways in case of no modal share. FC is the pathway"
"0","pathway = ""fc_variable"""
"0","for (case in setdiff(unique(reduction_dt[,pathway]),""0"")){"
"0","  row_case_baseline <- which(reduction_dt[,pathway]==case & rowSums(sapply(setdiff(pathway_cols,pathway),function(x)reduction_dt[,x]==""0""))==(length(pathway_cols)-1))"
"0","  #Calculate the reductions of additional pathways compared to the case"
"0","  add_pathway=""techno_variable"""
"0","  for (add_case in unique(reduction_dt[reduction_dt[,pathway]==case & reduction_dt[,""modal_share_variable""]==""0"",add_pathway])){"
"0","    #Obtain row number of the case"
"0","    row_case <- which(reduction_dt[,""modal_share_variable""]==""0"" & reduction_dt[,pathway]==case & reduction_dt[,add_pathway]==add_case )"
"0","    #Calculate reductions for first pathway"
"0","    reduction_dt[row_case,paste0(pathway,""_red"")] <- (score_baseline-reduction_dt[row_case_baseline,""Value""])/(score_baseline-score_target)"
"0","    #Calculate reductions for the second pathway"
"0","    reduction_dt[row_case,paste0(add_pathway,""_red"")] <- (reduction_dt[row_case_baseline,""Value""]-reduction_dt[row_case,""Value""])/(score_baseline-score_target)"
"0","  }"
"0","}"
"0","#Format"
"0","#Delete value and unit"
"0","reduction_dt <- subset(reduction_dt,techno_variable==0 | fc_variable==0 | modal_share_variable==0,select=-c(Unit,Value))"
"0","#force all NAs to 0"
"0","reduction_dt[is.na(reduction_dt)] <- 0"
"0",""
"0","#2) Create the plot dataframe"
"0","dt_col <- c(""PT"",""EV"",""FC"",""Value"")"
"0","plot_dt <- setNames(data.frame(matrix(0,ncol = length(dt_col), nrow = 0),stringsAsFactors = FALSE,check.names = FALSE),dt_col)"
"0",""
"0",""
"0","#3) Get air pollutant emission results"
"0","#First case: Optimization on technology"
"0","for (optimized_variable in c(""techno_variable"",""fc_variable"",""modal_share_variable"")){"
"0","  scen_tbc <- switch(optimized_variable,"
"0","                     techno_variable=""optimization_technology"","
"0","                     fc_variable=""optimization_fc"","
"0","                     modal_share_variable=""optimization_modal_share"")"
"0","  sim_tbc <- switch(optimized_variable,"
"0","                     techno_variable=""sim2"","
"0","                     fc_variable=""sim3"","
"0","                     modal_share_variable=""sim4"")"
"0","  #"
"0","  res_emission <- read_simulation_f(function_tbc = ""optimization_pathway_f"",sub_function_tbc = ""transport_on_road_emissions_f"",dts_name=""transport_on_road_emissions_tot"",scen_tbc = scen_tbc,sim_tbc = sim_tbc,sim_type = ""continuous"")"
"0","  #"
"0","  value_dt <- subset(res_emission,Year==2030 & Pollutant==""PM"")"
"0","  #"
"0","  for (i in 1:nrow(value_dt)){"
"0","  #Check if case is valide"
"0","  if (any(rowSums(sapply(setdiff(pathway_cols,optimized_variable),function(x)reduction_dt[,x]==value_dt[i,x]))==2)){"
"0","    #Get the row"
"0","    row_reduction <- which(rowSums(sapply(setdiff(pathway_cols,optimized_variable),function(x)reduction_dt[,x]==value_dt[i,x]))==2 & reduction_dt[,optimized_variable]==""0"")"
"0","    #Add data to plot"
"0","    if (optimized_variable==""techno_variable""){"
"0","      tmp_dt <- data.frame(PT=reduction_dt[row_reduction,""modal_share_variable_red""],FC=reduction_dt[row_reduction,""fc_variable_red""],EV=1-sum(reduction_dt[row_reduction,c(""modal_share_variable_red"",""fc_variable_red"")]),Value=value_dt[i,""Value""])"
"0","    } else if (optimized_variable==""fc_variable""){"
"0","      tmp_dt <- data.frame(PT=reduction_dt[row_reduction,""modal_share_variable_red""],EV=reduction_dt[row_reduction,""techno_variable_red""],FC=1-sum(reduction_dt[row_reduction,c(""modal_share_variable_red"",""techno_variable_red"")]),Value=value_dt[i,""Value""])"
"0","    } else if (optimized_variable==""modal_share_variable""){"
"0","      tmp_dt <- data.frame(FC=reduction_dt[row_reduction,""fc_variable_red""],EV=reduction_dt[row_reduction,""techno_variable_red""],PT=1-sum(reduction_dt[row_reduction,c(""fc_variable_red"",""techno_variable_red"")]),Value=value_dt[i,""Value""])"
"0","    }"
"0","    #"
"0","    plot_dt <- rbind(plot_dt,tmp_dt)"
"0","  }"
"0","}"
"0",""
"0","}"
"0",""
"0","#4) Plot"
"0","plot_dt$Value <- plot_dt$Value/10^6"
"0",""
"0","library(ggtern)"
"0","library(ggplot2)"
"0","#Base Plot"
"0","ggtern(data=plot_dt,aes(PT,FC,EV,value=Value))+"
"0","  geom_point()"

"0","budget_dt <- read.csv(""inputs/model/singapore_carbon_budget.csv"",stringsAsFactors = FALSE, check.names = FALSE)"
"0","plot_dt <- budget_dt"
"0","#Consider historical emissions"
"0","plot_dt <- subset(plot_dt,(Year%in%2005:2017 & Scenario==""INDC"")|Year>2017)"
"0",""
"0","plot_dt[plot_dt$Year%in%2005:2017,c(""Convergence_year"",""Scenario"",""Target"")] <- ""Historical"""
"0","plot_dt[grepl(""-19"",plot_dt$Scenario),""Target""] <- ""1.5C"""
"0","plot_dt[grepl(""-26"",plot_dt$Scenario),""Target""] <- ""2C"""
"0","plot_dt[is.na(plot_dt)] <- ""INDC"""
"0","plot_dt$Target <- factor(plot_dt$Target,levels=c(""Historical"",""INDC"",""2C"",""1.5C""))"
"0",""
"0","plot_dt$Scenario <- sapply(plot_dt$Scenario,function(x)substring(x,0,as.numeric(regexpr(pattern=""-"",x))-1))"
"0",""
"0","plot_ribbon <- aggregate(formula = Value~Target+Year,data =plot_dt,FUN=mean)"
"0","plot_ribbon$start <- sapply(1:nrow(plot_ribbon),function(x)min(subset(plot_dt,Year==plot_ribbon[x,""Year""] & Target==plot_ribbon[x,""Target""])$Value))"
"0","plot_ribbon$end <- sapply(1:nrow(plot_ribbon),function(x)max(subset(plot_dt,Year==plot_ribbon[x,""Year""] & Target==plot_ribbon[x,""Target""])$Value))"
"0",""
"0",""
"0",""
"0","ggplot()+"
"0","  geom_ribbon(data=subset(plot_ribbon,Target%in%c(""1.5C"",""2C"")),"
"0","            aes(x=Year,ymin=start,ymax=end,fill=Target),"
"0","            alpha=0.25)+"
"0","  geom_line(data=plot_ribbon,"
"0","            aes(x=Year,y=Value,colour=Target),"
"0","            size=1.2)+"
"0","  scale_colour_manual(values=c(Historical=""black"",INDC=""#1B9E77"",`1.5C`=""#D95F02"",`2C`=""#7570B3""),name=NULL)+"
"0","  scale_fill_manual(values=c(`1.5C`=""#D95F02"",`2C`=""#7570B3""),guide=NULL)+"
"0","  scale_linetype_manual(values=c(Historical=1,INDC=1,`2030`=2,`2040`=3), guide = guide_legend(title=""Convergence year""),breaks=c(""2030"",""2040""))+"
"0","  scale_x_continuous(expand=c(0,0))+"
"0","  labs(y=expression(""Mt CO""[2]),x=NULL)+"
"0","  theme_milovanoff()+"
"0","  theme(legend.box = ""vertical"","
"0","        legend.key.width=unit(1,""cm""))"

"0","modelframework::load_input_data_f()"
"0","transport <- do.call(transport_activity_f,list())"
"0","transport_pkt <- aggregate(formula=Value~Year+Unit,data=subset(transport[[""transport_pkt""]]),FUN=sum)"
"0",""
"0","pop_dt <- subset(get_input_f(""population""),Scenario ==""Medium"" & Year<=2050)"
"0",""
"0","transport_pkt$Transport_intensity <- sapply(1:nrow(transport_pkt),function(x)transport_pkt[x,""Value""]/subset(pop_dt,Year==transport_pkt[x,""Year""])$Value)"
"0",""
"0","#Linear regression"
"0","mat_tot_pkt <- subset(transport_pkt) %>%"
"0","  acast(data=., Unit ~ Year , value.var='Value',fun.aggregate=sum, margins=FALSE)"
"0","#Create matrix of population"
"0","mat_pop <- subset(pop_dt,Scenario==""Medium"" & Year <= 2050) %>%"
"0","  acast(data=., Country ~ Year , value.var='Value',fun.aggregate=sum, margins=FALSE)"
"0","#Calculate linear regression"
"0","lin_reg <- lm(mat_tot_pkt[,as.character(2005:2019)]~mat_pop[,as.character(2005:2019)])"
"0",""
"0","#Calculate the PKT/person"
"0",""
"0",""
"0","ggplot()+"
"0","  geom_line(data=transport_pkt,"
"0","           aes(x=Year,y=Value/10^7,colour=""Passenger activity"",linetype=ifelse(Year<2020,""Historical"",""Projeted"")),"
"0","           size=1.1)+"
"0","  geom_line(data=pop_dt,"
"0","            aes(x=Year,y=Value/(10^6),colour=""Population"",linetype=ifelse(Year<2020,""Historical"",""Projeted"")),"
"0","            size=1.1)+"
"0","  geom_line(data=transport_pkt,"
"0","            aes(x=Year,y=Transport_intensity/2.5,colour=""Transport intensity"",linetype=ifelse(Year<2020,""Historical"",""Projeted"")),"
"0","            size=1.1)+"
"0","  scale_y_continuous(limits=c(3,NA),expand = c(0.01,0),sec.axis = sec_axis(~.*2.5,name=""Transport Intensity \n (x1,000pkt/person)""))+"
"0","  scale_x_continuous(expand = c(0.01,0),breaks = seq(2005,2050,5))+"
"0","  scale_colour_milovanoff(palette_type = ""cat"",number_color = 2,name=NULL)+"
"0","  scale_linetype(name=NULL)+"
"0","  labs(x=NULL,y=""Passenger activity \n (x10 billion pkt) \n Population \n (million)"")+"
"0","  theme_milovanoff(legend_position = ""bottom"","
"0","                   axis.title.y.right =element_text(angle=90,hjust=0.6),"
"0","                   axis.title.y.left =element_text(hjust=0.5),"
"0","                   legend.key.width=unit(0.5,""cm""),"
"0","                   legend.box = ""vertical"")"
